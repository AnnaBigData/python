# -*- coding: utf-8 -*-
"""
Created on Sat Feb 27 17:57:14 2021

@author: Anna Ku
"""

# 3. Создайте собственный класс-исключение, который должен проверять содержимое
#  списка на наличие только чисел. Проверить работу исключения на реальном 
#  примере. Необходимо запрашивать у пользователя данные и заполнять список.
#  Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, 
# пока пользователь сам не остановит работу скрипта, введя, например, команду 
# “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только
#  числа и строки. При вводе пользователем очередного элемента необходимо 
#  реализовать проверку типа элемента и вносить его в список, только если введено 
#  число. Класс-исключение должен не позволить пользователю ввести текст (не число)
#  и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class My_list:
    def __init__(self, m_list):
        self.m_list = []
        
    def check_list(self): 
     while True:
            try:
                val = int(input('Введите данные - '))
                self.m_list.append(val)
                print(f'Cписок - {self.m_list} \n ')
           
            except:
                des = input(f'Еще попытка Y or N?')
                if des == 'Y' or des == 'y':
                   val = int(input('Введите данные - '))
                   self.m_list.append(val)
                   print(f'Cписок - {self.m_list} \n ')
                elif des == 'N' or des == 'n':
                    return self.m_list
                    raise StopIteration
                    
                else:
                    return self.m_list

m = My_list(1)
print(m.check_list())